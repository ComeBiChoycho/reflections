How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was much faster than having to go thru the whole code and possibly missing
	the mistake.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Can see the mistakes made clearly and learn from them.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing when to commit can be annoying but it allows more control over
	how many commits are made so it becomes better organized and readable in the long run.
	Unlike automatic versions that create commits when the code might not be ready to commit
	or be useable at all; This might confuse people reading this as the commits will be (sometimes)
	incomplete.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    They're different git focuses on code while Docs does things like word processors.
	Code most of the time requires multiple files working together.

How can you use the commands git log and git diff to view the history of files?

    git log shows the commits made with a quick description for each of them.
	git diff shows the difference between two commits.

How might using version control make you more confident to make changes that
could break something?

    It allows the programmer to experiment with the code when you know you can
	always go back to a earlier working version of your code.

Now that you have your workspace set up, what do you want to try using Git for?

    Experimenting with code. Obviously!
