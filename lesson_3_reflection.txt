When would you want to use a remote repository rather than keeping all your work
local?

    Remote for when you want to share the code with a group of people. Local
    when you are working alone.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Not always theres going to be a change in code thats needed to be pulled from the remote
	repository. Also the programmer might not want to update his/her current code.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are used when you are not allowed to commit changes to someone elses work.
	Clones are used to basically copy a repository.
	Branches are used to create features, experiment with code, etc. to not break the 
	master branch code.
	Each of them has its uses in the descriptions.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to check the change in the remote repository has changed and it can be used 
	to merge the local with the remote repository.
	

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Exchaging files locally which is much harder than use Git or Github.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    It give alot more flexibility to collaborate in groups and theres conflicts in code.
	This benefits the group as a whole because one person does not change the original or master
	and completly breaks the code, insted its done thru the pull requests and then merged.
	It also lets programmers experiment with their code. This is very beneficial since experimenting
	is what allows coding to flurish and create amazing features without the risk of destroying
	a working code.
